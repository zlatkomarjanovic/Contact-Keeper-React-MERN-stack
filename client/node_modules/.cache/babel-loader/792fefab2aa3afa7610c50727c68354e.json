{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types'; //eslint-disable-next-line\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/Zlaja/Zlatko - Work/Projekti/Front-end Projects/Contact-Keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","loading","map","contact","id","filter","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,YARF,EASEC,aATF,QAUO,UAVP,C,CAYA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAGF,MAAM,CAACG,OAFb;AAGLC,QAAAA,OAAO,EAAG;AAHL,OAAP;;AAKF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFL;AAGLC,QAAAA,OAAO,EAAG;AAHL,OAAP;;AAKA,SAAKT,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GACtCP,MAAM,CAACG,OAD+B,GACrBG,OADT,CAFL;AAIHF,QAAAA,OAAO,EAAG;AAJP,OAAP;;AAOA,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAFL;AAEsEC,QAAAA,OAAO,EAAG;AAFhF,OAAP;;AAIA,SAAKX,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFX,OAAP;;AAIA,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELU,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIA,SAAKb,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBF,OAAO,IAAI;AACzC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFL,OAAP;;AAOF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELW,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIA,SAAKZ,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAvDhB;AAyDD,CA1DD","sourcesContent":["import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from '../types';\r\n\r\n//eslint-disable-next-line\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts : action.payload,\r\n        loading : false\r\n      }\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n        loading : false\r\n      }\r\n      case UPDATE_CONTACT:\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.map(contact => contact.id === action.payload.id ?\r\n            action.payload : contact),\r\n            loading : false\r\n        }\r\n\r\n        case DELETE_CONTACT:\r\n          return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload), loading : false\r\n          }\r\n          case SET_CURRENT:\r\n            return {\r\n              ...state,\r\n              current: action.payload\r\n            }\r\n            case CLEAR_CURRENT:\r\n              return {\r\n                ...state,\r\n                current: null\r\n              }\r\n              case FILTER_CONTACTS:\r\n                return {\r\n                  ...state,\r\n                  filtered: state.contacts.filter(contact => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(regex) || contact.email.match(regex);\r\n                  })\r\n                };\r\n              case CLEAR_FILTER:\r\n                return {\r\n                  ...state,\r\n                  filtered: null\r\n                }\r\n                case CONTACT_ERROR:\r\n                  return {\r\n                    ...state,\r\n                    error: action.payload\r\n                  };\r\n                default:\r\n                  return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}