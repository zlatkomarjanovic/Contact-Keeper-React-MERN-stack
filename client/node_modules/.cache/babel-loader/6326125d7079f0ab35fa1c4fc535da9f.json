{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zlaja\\\\Zlatko - Work\\\\Projekti\\\\Front-end Projects\\\\Contact-Keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios'; //import uuid from 'uuid';\n\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //AddContact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content - Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n    } catch (err) {}\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current COntact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["D:/Zlaja/Zlatko - Work/Projekti/Front-end Projects/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","err","type","payload","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\n//import uuid from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER\r\n} from '../types';\r\n\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n  contacts: [],\r\n  current: null,\r\n  filtered: null\r\n  };\r\n\r\n  const[state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //AddContact\r\nconst addContact = async contact => {\r\n  const config = {\r\n    headers: {\r\n      'Content - Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post('/api/contacts', contact, config);\r\n  } catch (err) {\r\n\r\n  } \r\n\r\n\r\n\r\n  dispatch({ type: ADD_CONTACT, payload:contact });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  //Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload:id });\r\n  };\r\n\r\n  //Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload:contact });\r\n  };\r\n\r\n  //Clear Current COntact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT});\r\n  };\r\n\r\n  //Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload:contact });\r\n  };\r\n\r\n  //Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload:text });\r\n  };\r\n\r\n  //Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider value = { {\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter\r\n      }}>\r\n\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}