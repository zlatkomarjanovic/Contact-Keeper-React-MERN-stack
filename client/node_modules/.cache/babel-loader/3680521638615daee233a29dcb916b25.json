{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zlaja\\\\Zlatko - Work\\\\Projekti\\\\Front-end Projects\\\\Contact-Keeper\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //Load User\n  //Register User\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n  //Logout\n  //Clear Errors\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["D:/Zlaja/Zlatko - Work/Projekti/Front-end Projects/Contact-Keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","v4","uuidv4","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","register","formData","config","headers","res","post","type","payload","data","err","response","msg","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;;AAYA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAC,IAJc;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB;AAQA,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,UAAU,CAACG,WAAD,EAAca,YAAd,CAAnC,CATyB,CAWzB;AAEA;;AACA,QAAMU,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV;AADK,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAC1B,gBADE;AAEP2B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAND,CAMC,OAAMC,GAAN,EAAW;AACVV,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAACzB,aADE;AAEP0B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFpB,OAAD,CAAR;AAID;AAEF,GApBD,CAdyB,CAoCzB;AAEA;AAGA;;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAK;AACRpB,MAAAA,KAAK,EAACO,KAAK,CAACP,KADJ;AAERG,MAAAA,eAAe,EAACI,KAAK,CAACJ,eAFd;AAGRC,MAAAA,OAAO,EAACG,KAAK,CAACH,OAHN;AAIRC,MAAAA,IAAI,EAACE,KAAK,CAACF,IAJH;AAKRC,MAAAA,KAAK,EAACC,KAAK,CAACD;AALJ,KADZ;AAAA,cAUGR,KAAK,CAACuB;AAVT;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3DD;;GAAMxB,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS\r\n} from '../types';\r\n\r\n\r\nconst AuthState = props => {\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user:null,\r\n    error: null\r\n  };\r\n\r\n  const[state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  //Load User\r\n\r\n  //Register User\r\n  const register = async formData => {\r\n    const config = {\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config);\r\n      dispatch({\r\n        type:REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    }catch(err) {\r\n      dispatch({\r\n        type:REGISTER_FAIL,\r\n        payload: err.response.data.msg\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  //Login User\r\n\r\n  //Logout\r\n\r\n\r\n  //Clear Errors\r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value = { {\r\n        token:state.token,\r\n        isAuthenticated:state.isAuthenticated,\r\n        loading:state.loading,\r\n        user:state.user,\r\n        error:state.error,\r\n\r\n      }}>\r\n\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}