{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zlaja\\\\Zlatko - Work\\\\Projekti\\\\Front-end Projects\\\\Contact-Keeper\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = props => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null || contacts.length === 0 || !loading) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contacts !== null && !loading ? filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n      contact: contact\n    }, contact._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 82\n    }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n      contact: contact\n    }, contact._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Contacts, \"TDwhgIW1z1K2LcG8WJHCH34hzH8=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["D:/Zlaja/Zlatko - Work/Projekti/Front-end Projects/Contact-Keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","Spinner","Contacts","props","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,cAAc,GAAGP,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAACM,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA;AAAlC,MAA6CJ,cAAnD;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAOA,MAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAAzC,IAA8C,CAACD,OAAlD,EAA2D;AACzD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEH,sBACE,QAAC,QAAD;AAAA,cAECH,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GAAiCF,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAAK,QAAC,WAAD;AAC/E,MAAA,OAAO,EAAEA;AADsE,OAAkBA,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,YAAzB,CAApB,GACVP,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAC1C,QAAC,WAAD;AAA+B,MAAA,OAAO,EAAEA;AAAxC,OAAkBA,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,YADsB,CADvB,gBAGK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AAYC,CA3BD;;GAAMV,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, {Fragment, useContext, useEffect} from 'react'\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItem from './ContactItem';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Contacts = (props) => {\r\n  const contactContext = useContext(ContactContext);\r\n  const {contacts, filtered, getContacts, loading} = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n\r\n  if(contacts !== null || contacts.length === 0 || !loading) {\r\n    return <h4>Please add a contact !</h4>\r\n  }\r\n\r\nreturn(\r\n  <Fragment>\r\n\r\n  {contacts !== null && !loading ? (filtered !== null ? filtered.map(contact => (<ContactItem key={contact._id}\r\n  contact={contact}/>)) : contacts.map(contact => (\r\n    <ContactItem key={contact._id} contact={contact}/>\r\n  ))) : <Spinner />}\r\n\r\n\r\n\r\n  </Fragment>\r\n  )\r\n}\r\nexport default Contacts\r\n"]},"metadata":{},"sourceType":"module"}