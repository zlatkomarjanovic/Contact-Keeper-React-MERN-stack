{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zlaja\\\\Zlatko - Work\\\\Projekti\\\\Front-end Projects\\\\Contact-Keeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CPMTACTS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //AddContact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current COntact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["D:/Zlaja/Zlatko - Work/Projekti/Front-end Projects/Contact-Keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CPMTACTS","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_CPMTACTS\r\n} from '../types';\r\n\r\n\r\nconst ContactState = props => {\r\n  const initialState = {\r\n  contacts: null,\r\n  current: null,\r\n  filtered: null,\r\n  error: null\r\n  };\r\n\r\n  const[state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  // Get Contacts\r\n  const getContacts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/contacts');\r\n\r\n      dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: res.data\r\n      });\r\n\r\n    } catch (err) {\r\n      dispatch({\r\n        type : CONTACT_ERROR,\r\n        payload: err.response.msg\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //AddContact\r\nconst addContact = async contact => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/contacts', contact, config);\r\n\r\n    dispatch({\r\n      type: ADD_CONTACT,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type : CONTACT_ERROR,\r\n      payload: err.response.msg\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  //Delete Contact\r\n  const deleteContact = id => {\r\n    dispatch({ type: DELETE_CONTACT, payload:id });\r\n  };\r\n\r\n  //Set Current Contact\r\n  const setCurrent = contact => {\r\n    dispatch({ type: SET_CURRENT, payload:contact });\r\n  };\r\n\r\n  //Clear Current COntact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT});\r\n  };\r\n\r\n  //Update Contact\r\n  const updateContact = contact => {\r\n    dispatch({ type: UPDATE_CONTACT, payload:contact });\r\n  };\r\n\r\n  //Filter Contacts\r\n  const filterContacts = text => {\r\n    dispatch({ type: FILTER_CONTACTS, payload:text });\r\n  };\r\n\r\n  //Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider value = { {\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n        getContacts\r\n      }}>\r\n\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}